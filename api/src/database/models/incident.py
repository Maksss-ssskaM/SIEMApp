import enum
from sqlalchemy import Column, String, DateTime, Enum, UUID
from sqlalchemy.orm import relationship

from database.db_settings import Base


class IncidentSeverity(enum.Enum):
    High = '–í—ã—Å–æ–∫–∏–π üî¥'
    Medium = '–°—Ä–µ–¥–Ω–∏–π üü†'
    Low = '–ù–∏–∑–∫–∏–π üü°'


class IncidentStatus(enum.Enum):
    New = '–ù–æ–≤—ã–π'
    Approved = '–£—Ç–≤–µ—Ä–∂–¥—ë–Ω'
    InProgress = '–í —Ä–∞–±–æ—Ç–µ'
    Resolved = '–†–∞–∑—Ä–µ—à—ë–Ω'
    Closed = '–ó–∞–∫—Ä—ã—Ç'


class Incident(Base):
    __tablename__ = 'incidents'
    incident_id = Column(UUID, primary_key=True, unique=True, nullable=False)
    key = Column(String(255), nullable=False)
    name = Column(String(255), nullable=False)
    status = Column(Enum(IncidentStatus), nullable=False)
    type = Column(String(255), nullable=False)
    created_at = Column(DateTime, nullable=False)
    severity = Column(Enum(IncidentSeverity), nullable=False)

    events = relationship('Event', back_populates='incident')



